- name: MySQL PVC
  k8s_v1_persistent_volume_claim:
    name: mysql
    namespace: "{{ namespace }}"
    labels:
      app: mysql
      service: mysql
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: 10Gi
    state: present

- name: MySQL deployment
  openshift_v1_deployment_config:
    name: mysql
    namespace: "{{ namespace }}"
    labels:
      app: mysql
      service: mysql
    replicas: 1
    selector:
      app: mysql
      service: mysql
    spec_template_metadata_labels:
      app: mysql
      service: mysql
    containers:
    - name: mysql
      image: docker.io/openshift/mysql-{{ MYSQL_VERSION }}-centos7
      env:
      - name: MYSQL_USER
        value: "{{ MYSQL_USER }}"
      - name: MYSQL_PASSWORD
        value: "{{ MYSQL_PASSWORD }}"
      - name: MYSQL_ROOT_PASSWORD
        value: "{{ MYSQL_ROOT_PASSWORD }}"
      - name: MYSQL_DATABASE
        value: "{{ MYSQL_DATABASE }}"
      ports:
      - name: mysql
        protocol: TCP
        container_port: 3306
      liveness_probe:
        timeout_seconds: 1
        inital_delay_seconds: 30
        tcp_socket:
          port: 3306
      readiness_probe:
        timeout_seconds: 1
        initial_delay_seconds: 5
        _exec:
          command:
          - "/bin/sh"
          - "-i"
          - "-c"
          - "MYSQL_PWD=\"$MYSQL_PASSWORD\" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"
      volume_mounts:
      - mount_path: /var/lib/mysql/data
        name: mysql-data
    volumes:
    - name: mysql-data
      persistent_volume_claim:
        claim_name: mysql
    triggers:
    - type: ConfigChange
    state: present

- name: MySQL service
  k8s_v1_service:
    name: mysql
    namespace: "{{ namespace }}"
    labels:
      app: mysql
      service: mysql
    selector:
      app: mysql
      service: mysql
    ports:
    - name: mysql
      port: 3306
      target_port: 3306
    state: present
  register: mysql_service

# Check the containers in the mysql pod and make sure they are all ready
- name: "Wait for all mysql containers to become ready"
  shell: oc get pods --namespace={{ namespace }} --selector="deploymentconfig=mysql" -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}'| wc -w
  register: mysql_result
  until: mysql_result.stdout.find("1") != -1
  retries: 30
  delay: 5
